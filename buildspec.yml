version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 14
    commands:
      - echo Doing tests...
      - npm install -g mocha
      - npm install --prefix ./app
      - npm run test --prefix ./app
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
      - chmod 700 get_helm.sh
      - ./get_helm.sh
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Build completed on `date`
  post_build:
    commands:
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Deploy to EKS on `date`
      - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $EKS_CLUSTER --role-arn $KUBECTL_ROLE_ARN
      - kubectl apply --validate=false -f ./k8s/cert-manager.yaml
      - helm upgrade -i cluster-additional-tools ./k8s/cluster-additional-tools --set eksClusterName=$EKS_CLUSTER --set awsDefaultRegion=$AWS_DEFAULT_REGION
      - helm upgrade -i sre-challenge ./k8s/sre-challenge-rest --set eksClusterName=$EKS_CLUSTER --set awsAccountId=$AWS_ACCOUNT_ID /
        --set awsDefaultRegion=$AWS_DEFAULT_REGION --set imageRepoName=$IMAGE_REPO_NAME --set imageTag=$IMAGE_TAG